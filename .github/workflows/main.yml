name: CI

on:
  push:
    branches: [main]

jobs: 
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Build docker-compose
        run: |
          docker-compose -f ./docker-compose.yml up --build -d

  sca:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - run: |
          mkdir -p logs/

      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'test'
          path: '.'
          format: 'HTML'    
          out: 'logs/reports'
          
      - uses: actions/upload-artifact@v2
        with:
          name: logs
          path: logs/reports
    
  
  sast:
    needs: [build, sca]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3 
        
      - run: |
          mkdir -p logs/  

      - name: njsscan check
        uses: ajinabraham/njsscan-action@master
        with:
          args: ./logs --sarif -o logs/output.sarif
      
      - name: output
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: logs/output.sarif

  dast:
    needs: [build, sca]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Build docker-compose for testing
        run: sudo docker-compose -f ./docker-compose.yml up --build -d

      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.6.1
        with:
         target: 'http://localhost:9090'
         cmd_options: '-a'

  dast2:
    needs: [build, sca]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      
      - name: Build env
        run: |
          docker-compose -f ./docker-compose.yml up --build -d
          cp .github/workflows/stackhawk.yml /home/runner/work/dvna/dvna/stackhawk.yml

      - name: HawkScan
        uses: stackhawk/hawkscan-action@v2
        with:
          apiKey: ${{ secrets.HAWK_API_KEY }}
